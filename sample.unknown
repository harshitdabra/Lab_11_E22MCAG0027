import java.util.Scanner;

interface Quackable {
    void quack();
}

interface Flyable {
    void fly();
}

abstract class Duck {
    Flyable flyBehaviour;

    public void swim() {
        System.out.println("Swimming...");
    }

    public void setFlyBehaviour(Flyable flyBehaviour) {
        this.flyBehaviour = flyBehaviour;
    }

    public abstract void display();
}

class RubberDuck extends Duck implements Quackable {
    public void display() {
        System.out.println("I'm a rubber duck");
    }

    public void quack() {
        System.out.println("Squeak!");
    }
}

class MallardDuck extends Duck implements Quackable, Flyable {
    public void display() {
        System.out.println("I'm a mallard duck");
    }

    public void quack() {
        System.out.println("Quack!");
    }

    public void fly() {
        System.out.println("Flying...");
    }
}

class ReadHeadDuck extends Duck implements Flyable {
    public void display() {
        System.out.println("I'm a redhead duck");
    }

    public void fly() {
        System.out.println("Flying...");
    }
}

class DecoyDuck extends Duck implements Quackable, Flyable {
    public void display() {
        System.out.println("I'm a decoy duck");
    }

    public void quack() {
        System.out.println("Quack!");
    }

    public void fly() {
        System.out.println("Flying...");
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String duckType = "";

        while (duckType.equals("")) {
            System.out.println("Enter the type of duck (Rubber/Mallard/RedHead/Decoy):");
            duckType = scanner.nextLine().toLowerCase();

            switch (duckType) {
                case "rubber":
                    Duck rubberDuck = new RubberDuck();
                    rubberDuck.display();
                    rubberDuck.swim();
                    rubberDuck.quack();
                    break;
                case "mallard":
                    Duck mallardDuck = new MallardDuck();
                    mallardDuck.display();
                    mallardDuck.swim();
                    mallardDuck.quack();
                    mallardDuck.fly();
                    break;
                case "redhead":
                    Duck redheadDuck = new ReadHeadDuck();
                    redheadDuck.display();
                    redheadDuck.swim();
                    redheadDuck.fly();
                    break;
                case "decoy":
                    Duck decoyDuck = new DecoyDuck();
                    decoyDuck.display();
                    decoyDuck.swim();
                    decoyDuck.quack();
                    decoyDuck.fly();
                    break;
                default:
                    System.out.println("Invalid duck type!");
                    duckType = "";
                    break;
            }
        }

        scanner.close();
        }
}